name: Docker CI

on:
  push:
    tags:
      - 'v*'  # Disparar el flujo de trabajo cuando se crea un tag que comience con 'v'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v2

      # Listar contenido del directorio raíz
      - name: List directory contents
        run: |
          echo "Contenido del directorio raíz:"
          ls -R

      # Paso 2: Login a Docker Hub
      - name: Login to Docker Hub
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin




      # Paso 3: Construir la imagen Docker para Nginx
      - name: Build Docker image for Nginx
        if: startsWith(github.ref, 'refs/tags/vNginx.')
        run: |
          TAG=${GITHUB_REF##*/}
          echo "Construyendo imagen Nginx con tag: $TAG"
          docker build -t marinolb/nginx-app:$TAG ./docker1/custom_nginx  # Verifica la ruta aquí

      # Paso 4: Publicar la imagen Docker para Nginx
      - name: Push Docker image for Nginx
        if: startsWith(github.ref, 'refs/tags/vNginx.')
        run: |
          TAG=${GITHUB_REF##*/}
          echo "Publicando imagen Nginx con tag: $TAG"
          docker push marinolb/nginx-app:$TAG




      # Paso 5: Listar contenido del directorio para Django
      - name: List Django directory contents
        if: startsWith(github.ref, 'refs/tags/vDjango.')
        run: |
          echo "Contenido del directorio Django:"
          ls -R ./docker2/django-workspace

      # Paso 6: Construir la imagen Docker para Django
      - name: Build Docker image for Django
        if: startsWith(github.ref, 'refs/tags/vDjango.')
        run: |
          TAG=${GITHUB_REF##*/}
          echo "Construyendo imagen Django con tag: $TAG"
          docker build -t marinolb/django-app:$TAG ./docker2/django-workspace/app  # Verifica la ruta aquí

      # Paso 7: Publicar la imagen Docker para Django
      - name: Push Docker image for Django
        if: startsWith(github.ref, 'refs/tags/vDjango.')
        run: |
          TAG=${GITHUB_REF##*/}
          echo "Publicando imagen Django con tag: $TAG"
          docker push marinolb/django-app:$TAG




      # Paso 8: Listar contenido del directorio para Laravel
      - name: List Laravel directory contents
        if: startsWith(github.ref, 'refs/tags/vLaravel.')
        run: |
          echo "Contenido del directorio Laravel:"
          ls -R ./laravel-reto/workspace/app  # Verifica la ruta aquí

      # Paso 9: Construir la imagen Docker para Laravel
      - name: Build Docker image for Laravel
        if: startsWith(github.ref, 'refs/tags/vLaravel.')
        run: |
          TAG=${GITHUB_REF##*/}
          echo "Construyendo imagen Laravel con tag: $TAG"
          docker build -t marinolb/laravel-app:$TAG ./laravel-reto  # Asegúrate de que aquí esté el Dockerfile


      # Paso 10: Ejecutar los tests de Laravel
      - name: Run Laravel tests
        if: github.ref == 'refs/heads/master'  # Asegúrate de que se ejecuta solo en la rama master
        run: |
          echo "Ejecutando tests de Laravel..."
          docker run --rm -v ${{ github.workspace }}:/app -w /app/workspace marinolb/laravel-app:latest php artisan test


      # Paso 11: Publicar la imagen Docker para Laravel
      - name: Push Docker image for Laravel
        if: startsWith(github.ref, 'refs/tags/vLaravel.') && success()  # Solo si el build anterior fue exitoso
        run: |
          TAG=${GITHUB_REF##*/}
          echo "Publicando imagen Laravel con tag: $TAG"
          docker push marinolb/laravel-app:$TAG

